// generated from rosidl_adapter/resource/msg.idl.em
// with input from ublox_msgs/msg/EsfMEAS.msg
// generated code does not contain a copyright notice


module ublox_msgs {
  module msg {
    module EsfMEAS_Constants {
      const uint8 CLASS_ID = 16;
      const uint8 MESSAGE_ID = 2;
      const uint16 FLAGS_TIME_MARK_SENT_MASK = 3;
      const uint16 TIME_MARK_NONE = 0;
      const uint16 TIME_MARK_EXT0 = 1;
      const uint16 TIME_MARK_EXT = 2;
      const uint16 FLAGS_TIME_MARK_EDGE = 4;
      const uint16 FLAGS_CALIB_T_TAG_VALID = 8;
      const uint32 DATA_FIELD_MASK = 16777215;
      const uint32 DATA_TYPE_MASK = 1056964608;
      const uint32 DATA_TYPE_SHIFT = 24;
      const uint32 DATA_TYPE_NONE = 0;
      const uint32 DATA_TYPE_Z_AXIS_GYRO = 5;
      const uint32 DATA_TYPE_WHEEL_TICKS_FRONT_LEFT = 6;
      const uint32 DATA_TYPE_WHEEL_TICKS_FRONT_RIGHT = 7;
      const uint32 DATA_TYPE_WHEEL_TICKS_REAR_LEFT = 8;
      const uint32 DATA_TYPE_WHEEL_TICKS_REAR_RIGHT = 9;
      const uint32 DATA_TYPE_SINGLE_TICK = 10;
      const uint32 DATA_TYPE_SPEED = 11;
      const uint32 DATA_TYPE_GYRO_TEMPERATURE = 12;
      const uint32 DATA_TYPE_GYRO_ANG_RATE_Y = 13;
      const uint32 DATA_TYPE_GYRO_ANG_RATE_X = 14;
      const uint32 DATA_TYPE_ACCELEROMETER_X = 16;
      const uint32 DATA_TYPE_ACCELEROMETER_Y = 17;
      const uint32 DATA_TYPE_ACCELEROMETER_Z = 18;
    };
    @verbatim (language="comment", text=
      " ESF-MEAS (0x10 0x02)" "\n"
      " External Sensor Fusion Measurements" "\n"
      "" "\n"
      " Possible data types for the data field are described in the ESF Measurement" "\n"
      " Data section")
    struct EsfMEAS {
      @verbatim (language="comment", text=
        " Time tag of measurement generated by external" "\n"
        " sensor")
      uint32 time_tag;

      @verbatim (language="comment", text=
        " Flags. Set all unused bits to zero:")
      uint16 flags;

      @verbatim (language="comment", text=
        " Identification number of data provider")
      uint16 id;

      @verbatim (language="comment", text=
        " Start of repeated block (N times)" "\n"
        " data, see mask below")
      sequence<uint32> data;

      @verbatim (language="comment", text=
        " End of repeated block" "\n"
        " Start of optional block (size is either 0 or 1)" "\n"
        " Receiver local time calibrated." "\n"
        " This field must not be supplied when" "\n"
        " calibTtagValid is set to 0")
      @unit (value="ms")
      sequence<uint32> calib_t_tag;
    };
  };
};
